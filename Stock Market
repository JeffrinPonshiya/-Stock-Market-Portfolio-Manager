import yfinance as yf
import pandas as pd
cl PortfolioManager:
    def _init(self): # Changed _init to _init_
        """Initialize portfolio as a dictionary."""
        self.portfolio = {}
    def add_stock(self, ticker, quantity, buy_price):
        """Add or update stock in the portfolio."""
        if ticker in self.portfolio:
            self.portfolio[ticker]['quantity'] += quantity
            self.portfolio[ticker]['total_cost'] += quantity * buy_price
        else:
            self.portfolio[ticker] = {'quantity': quantity, 'buy_price': buy_price, 'total_cost': quantity * buy_price}
        print(f"{quantity} shares of {ticker} added at ${buy_price} each.")
    def remove_stock(self, ticker, quantity):
        """Remove stock from portfolio."""
        if ticker in self.portfolio:
            if self.portfolio[ticker]['quantity'] > quantity:
                self.portfolio[ticker]['quantity'] -= quantity
                self.portfolio[ticker]['total_cost'] -= (self.portfolio[ticker]['buy_price'] * quantity)
            else:
                del self.portfolio[ticker]
            print(f"{quantity} shares of {ticker} removed.")
        else:
            print(f"{ticker} not in portfolio.")
    def fetch_live_prices(self):
        """Fetch live prices for all stocks in portfolio."""
        for ticker in self.portfolio.keys():
            stock = yf.Ticker(ticker)
            live_price = stock.history(period="1d")['Close'].iloc[-1]
            self.portfolio[ticker]['live_price'] = live_price
    def display_portfolio(self):
        """Display portfolio with live stock prices and profit/loss."""
        if not self.portfolio:
            print("Portfolio is empty.")
            return
        self.fetch_live_prices()
        data = []
        for ticker, details in self.portfolio.items():
            quantity = details['quantity']
            buy_price = details['buy_price']
            total_cost = details['total_cost']
            live_price = details.get('live_price', 0)
            market_value = quantity * live_price
            profit_loss = market_value - total_cost
            data.append([ticker, quantity, buy_price, total_cost, live_price, market_value, profit_loss])
        df = pd.DataFrame(data, columns=['Ticker', 'Quantity', 'Buy Price', 'Total Cost', 'Live Price', 'Market Value', 'Profit/Loss'])
        print(df)
portfolio = PortfolioManager()
portfolio.add_stock("AAPL", 10, 150)
portfolio.add_stock("GOOGL", 5, 2800)
portfolio.display_portfolio()
